import{c as e}from"./index.522b8f46.js";import{s as t}from"./utils.1dbcb5de.js";import"./vendor.ad595088.js";const o=document.querySelector("#canvas"),n=document.querySelector("#num-points"),i=document.querySelector("#num-points-value"),r=document.querySelector("#point-size"),c=document.querySelector("#point-size-value"),l=document.querySelector("#opacity"),a=document.querySelector("#opacity-value"),s=document.querySelector("#click-lasso-initiator"),u=document.querySelector("#reset"),d=document.querySelector("#export"),p=document.querySelector("#example-connected-points");p.setAttribute("class","active"),p.removeAttribute("href");let v=[],m=9e3,y=1,C=.33,S=[];const g=e({canvas:o,lassoMinDelay:10,lassoMinDist:2,pointSize:y,showReticle:!0,reticleColor:[1,1,.878431373,.33],showPointConnections:!0,pointConnectionColor:[1,1,1,.15],pointConnectionSize:2,lassoInitiator:!0});d.addEventListener("click",(()=>t(g))),console.log(`Scatterplot v${g.get("version")}`),g.subscribe("select",(({points:e})=>{if(console.log("Selected:",e),S=e,1===S.length){const e=v[S[0]];console.log(`X: ${e[0]}\nY: ${e[1]}\nCategory: ${e[2]}\nValue: ${e[3]}`)}})),g.subscribe("deselect",(()=>{console.log("Deselected:",S),S=[]}));const h=e=>{m=e,n.value=m,i.innerHTML=m,v=(e=>{const t=Math.round(e/3),o=Math.round(t/5),n=[];for(let i=0;i<3;i++)for(let e=0;e<o;e++)for(let t=0;t<5;t++)n.push([.6*i-.6+(.3*Math.random()-.15),.45*t-.9,i,Math.random(),i*o+e]);return n})(m),g.draw(v)};n.addEventListener("input",(e=>{i.innerHTML=+e.target.value+" <em>release to redraw</em>"}));n.addEventListener("change",(e=>h(+e.target.value)));const f=e=>{var t;y=e,r.value=y,c.innerHTML=y,g.set({pointSize:(t=y,Array(100).fill().map(((e,o)=>1+o/99*(10*t-1))))})};r.addEventListener("input",(e=>f(+e.target.value)));const q=e=>{C=e,l.value=C,a.innerHTML=C,g.set({opacity:C})};l.addEventListener("input",(e=>q(+e.target.value)));s.addEventListener("change",(e=>{g.set({lassoInitiator:e.target.checked})})),s.checked=g.get("lassoInitiator");u.addEventListener("click",(()=>{g.reset()})),g.set({colorBy:"valueZ",sizeBy:"valueW",pointColor:[[255,128,203,128],[87,199,255,128],[238,228,98,128]],pointConnectionColorBy:"valueZ",pointConnectionColor:[[255,128,203,6],[87,199,255,6],[238,228,98,6]],pointConnectionColorActive:[[255,128,203,128],[87,199,255,128],[238,228,98,128]],pointConnectionColorHover:[[255,128,203,99],[87,199,255,99],[238,228,98,99]],pointConnectionOpacityBy:"valueW",pointConnectionOpacity:Array(10).fill().map(((e,t)=>(t+1)/100)),pointConnectionSizeBy:"valueW",pointConnectionSize:Array(18).fill().map(((e,t)=>(t+1)/2))}),f(y),q(C),h(m);
