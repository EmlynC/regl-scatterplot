import{c as e}from"./index.522b8f46.js";import{s as t}from"./utils.1dbcb5de.js";import"./vendor.ad595088.js";const o=document.querySelector("#canvas"),n=document.querySelector("#num-points"),r=document.querySelector("#num-points-value"),c=document.querySelector("#point-size"),s=document.querySelector("#point-size-value"),l=document.querySelector("#opacity"),i=document.querySelector("#opacity-value"),a=document.querySelector("#click-lasso-initiator"),u=document.querySelector("#reset"),d=document.querySelector("#export"),y=document.querySelector("#example-dynamic-opacity");y.setAttribute("class","active"),y.removeAttribute("href");let p=[],v=1e6,m=2,S=.15,g=[];const q=e({canvas:o,lassoMinDelay:10,lassoMinDist:2,pointSize:m,pointColor:"#fff",opacityBy:"density",showReticle:!0,reticleColor:[1,1,.878431373,.33],lassoInitiator:!0});d.addEventListener("click",(()=>t(q))),console.log(`Scatterplot v${q.get("version")}`),q.subscribe("select",(({points:e})=>{if(console.log("Selected:",e),g=e,1===g.length){const e=p[g[0]];console.log(`X: ${e[0]}\nY: ${e[1]}\nCategory: ${e[2]}\nValue: ${e[3]}`)}})),q.subscribe("deselect",(()=>{console.log("Deselected:",g),g=[]}));const L=e=>{v=e,n.value=v,r.innerHTML=v,p=(e=>{const t=[];let o,n,r,c=2.644838333129883,s=4.060488700866699,l=2.8982460498809814;const i=.006;let a=1/0,u=-1/0,d=1/0,y=-1/0;for(let m=0;m<=e;m++){let e=-s-l,p=c+.2*s,v=.2+l*(c-5.7);const m=c+.003*e,S=s+.003*p,g=l+.003*v;e=-S-g,p=m+.2*S,v=.2+g*(m-5.7),o=c+i*e,n=s+i*p,r=l+i*v,t.push([o,n,0,0]),a=o<a?o:a,u=o>u?o:u,d=n<d?n:d,y=n>y?n:y,c=o,s=n,l=r}const p=u-a,v=y-d;for(let m=0;m<=e;m++)t[m][0]-=a,t[m][0]/=p/2,t[m][0]-=1,t[m][1]-=d,t[m][1]/=v/2,t[m][1]-=1;return t})(v),q.draw(p)};n.addEventListener("input",(e=>{r.innerHTML=+e.target.value+" <em>release to redraw</em>"}));n.addEventListener("change",(e=>L(+e.target.value)));const f=e=>{m=e,c.value=m,s.innerHTML=m,q.set({pointSize:m})};c.addEventListener("input",(e=>f(+e.target.value)));const b=l.parentNode.cloneNode(!0);l.parentNode.after(b),l.style.display="none",i.innerHTML="Auto";const h=b.querySelector("input"),M=b.querySelector(".label"),E=b.querySelector(".value");M.innerHTML="Opacity Density Fill";const H=(e,t)=>{S=e,h.value=S,E.innerHTML=S,t||q.set({opacityByDensityFill:S})};h.addEventListener("input",(e=>H(+e.target.value))),H(S,!0);a.addEventListener("change",(e=>{q.set({lassoInitiator:e.target.checked})})),a.checked=q.get("lassoInitiator");u.addEventListener("click",(()=>{q.reset()})),f(m),L(v);
