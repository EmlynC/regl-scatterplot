import{m as e}from"./vendor.ad595088.js";import{s as t}from"./utils.1dbcb5de.js";import{c as o}from"./index.522b8f46.js";const n=document.querySelector("#modal"),a=document.querySelector("#modal span"),r=document.querySelector("#canvas"),s=document.querySelector("#num-points"),c=document.querySelector("#num-points-value"),l=document.querySelector("#point-size"),i=document.querySelector("#point-size-value"),d=document.querySelector("#opacity"),u=document.querySelector("#opacity-value"),m=document.querySelector("#click-lasso-initiator"),p=document.querySelector("#reset"),v=document.querySelector("#export"),y=document.querySelector("#example-performance-mode");y.setAttribute("class","active"),y.removeAttribute("href");let f=[],g=2e7,b=.25,S=.33,h=[];const M=e((function(){self.onmessage=function(e){const t=e.data;try{let e=[];const o=.2,n=t/100;for(let t=0;t<10;t++)for(let a=0;a<10;a++){const r=a*o-1,s=t*o-1,c=[];for(let e=0;e<n;e++)c.push([r+Math.random()*o,s+Math.random()*o,Math.round(Math.random()),Math.random()]);e=e.concat(c.sort(((e,t)=>e[0]-t[0]||e[1]-t[1])))}self.postMessage({points:e})}catch(o){self.postMessage({error:o})}}})),q=o({canvas:r,lassoMinDelay:10,lassoMinDist:2,pointSize:b,showReticle:!0,performanceMode:!0,lassoInitiator:!0});v.addEventListener("click",(()=>t(q))),console.log(`Scatterplot v${q.get("version")}`),q.subscribe("select",(({points:e})=>{if(console.log("Selected:",e),h=e,1===h.length){const e=f[h[0]];console.log(`X: ${e[0]}\nY: ${e[1]}\nCategory: ${e[2]}\nValue: ${e[3]}`)}})),q.subscribe("deselect",(()=>{console.log("Deselected:",h),h=[]}));const L=e=>{var t,o;t=`Hang tight. Generating ${(g/1e6).toFixed(1)} million points...`,n.style.display="flex",a.textContent=t,g=e,s.value=g,c.innerHTML=g,(o=g,new Promise(((e,t)=>{M.onmessage=o=>{o.data.error?t(o.data.error):e(o.data.points)},M.postMessage(o)}))).then((e=>{f=e,q.draw(f),n.style.display="none",a.textContent=""}))};s.addEventListener("input",(e=>{c.innerHTML=+e.target.value+" <em>release to redraw</em>"}));s.addEventListener("change",(e=>L(+e.target.value)));const x=e=>{b=e,l.value=b,i.innerHTML=b,q.set({pointSize:b})};l.addEventListener("input",(e=>x(+e.target.value)));const E=e=>{S=e,d.value=S,u.innerHTML=S,q.set({opacity:S})};d.addEventListener("input",(e=>E(+e.target.value)));m.addEventListener("change",(e=>{q.set({lassoInitiator:e.target.checked})})),m.checked=q.get("lassoInitiator");p.addEventListener("click",(()=>{q.reset()}));q.set({colorBy:"value",pointColor:["#002072","#162b79","#233680","#2e4186","#394d8d","#425894","#4b649a","#5570a1","#5e7ca7","#6789ae","#7195b4","#7ba2ba","#85aec0","#90bbc6","#9cc7cc","#a9d4d2","#b8e0d7","#c8ecdc","#ddf7df","#ffffe0"]}),x(b),E(S),L(g);
